{"ast":null,"code":"/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\n\nconst CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\n\nconst CSS_NUMBER_KEYS = [\"animation-iteration-count\", \"border-image-outset\", \"border-image-slice\", \"border-image-width\", \"box-flex\", \"box-flex-group\", \"box-ordinal-group\", \"column-count\", \"columns\", \"counter-increment\", \"counter-reset\", \"flex\", \"flex-grow\", \"flex-positive\", \"flex-shrink\", \"flex-negative\", \"flex-order\", \"font-weight\", \"grid-area\", \"grid-column\", \"grid-column-end\", \"grid-column-span\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-span\", \"grid-row-start\", \"line-clamp\", \"line-height\", \"opacity\", \"order\", \"orphans\", \"tab-size\", \"widows\", \"z-index\", \"zoom\", // SVG properties.\n\"fill-opacity\", \"flood-opacity\", \"stop-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\"]; // Add vendor prefixes to all unit-less properties.\n\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n/**\n * Escape a CSS class name.\n */\n\n\nfunction escape(str) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\n\n\nfunction hyphenate(propertyName) {\n  return propertyName.replace(/[A-Z]/g, m => `-${m.toLowerCase()}`).replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\n\n\nfunction stringHash(str) {\n  let value = 5381;\n  let len = str.length;\n\n  while (len--) value = value * 33 ^ str.charCodeAt(len);\n\n  return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\n\n\nfunction styleToString(key, value) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n/**\n * Sort an array of tuples by first value.\n */\n\n\nfunction sortTuples(value) {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1);\n}\n/**\n * Categorize user styles.\n */\n\n\nfunction parseStyles(styles, hasNestedStyles) {\n  const properties = [];\n  const nestedStyles = []; // Sort keys before adding to styles.\n\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36\n    /* $ */\n    && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n/**\n * Stringify an array of property tuples.\n */\n\n\nfunction stringifyProperties(properties) {\n  return properties.map(_ref => {\n    let [name, value] = _ref;\n    if (!Array.isArray(value)) return styleToString(name, value);\n    return value.map(x => styleToString(name, x)).join(\";\");\n  }).join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\n\n\nfunction interpolate(selector, parent) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\n\n\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n  const {\n    style,\n    nested,\n    isUnique\n  } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64\n  /* @ */\n  ) {\n    const child = {\n      selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child); // Nested styles support (e.g. `.foo > @media > .bar`).\n\n    if (style && parent) {\n      child.styles.push({\n        selector: parent,\n        style,\n        isUnique\n      });\n    }\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent);\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n    if (style) stylesList.push({\n      selector: key,\n      style,\n      isUnique\n    });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\n\n\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n  for (const {\n    selector,\n    style,\n    isUnique\n  } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique ? `u\\0${(++uniqueId).toString(36)}` : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const {\n    selector,\n    style,\n    rules,\n    styles\n  } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n/**\n * Cache to list to styles.\n */\n\n\nfunction join(arr) {\n  let res = \"\";\n\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n\n  return res;\n}\n/**\n * Noop changes.\n */\n\n\nconst noopChanges = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n/**\n * Implement a cache/event emitter.\n */\n\nexport class Cache {\n  constructor() {\n    let changes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noopChanges;\n    this.changes = changes;\n    this.sheet = [];\n    this.changeId = 0;\n    this._keys = [];\n    this._children = Object.create(null);\n    this._counters = Object.create(null);\n  }\n\n  add(style) {\n    const count = this._counters[style.id] || 0;\n    const item = this._children[style.id] || style.clone();\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n\n      this._keys.push(item.id);\n\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n\n      const prevItemChangeId = item.changeId;\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style) {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n      const item = this._children[style.id];\n\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values() {\n    return this._keys.map(key => this._children[key]);\n  }\n\n  merge(cache) {\n    for (const item of cache.values()) this.add(item);\n\n    return this;\n  }\n\n  unmerge(cache) {\n    for (const item of cache.values()) this.remove(item);\n\n    return this;\n  }\n\n  clone() {\n    return new Cache().merge(this);\n  }\n\n}\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\n\nexport class Selector {\n  constructor(selector, id) {\n    this.selector = selector;\n    this.id = id;\n  }\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone() {\n    return this;\n  }\n\n}\n/**\n * The style container registers a style string with selectors.\n */\n\nexport class Style extends Cache {\n  constructor(style, id) {\n    super();\n    this.style = style;\n    this.id = id;\n  }\n\n  getStyles() {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone() {\n    return new Style(this.style, this.id).merge(this);\n  }\n\n}\n/**\n * Implement rule logic for style output.\n */\n\nexport class Rule extends Cache {\n  constructor(rule, style, id) {\n    super();\n    this.rule = rule;\n    this.style = style;\n    this.id = id;\n  }\n\n  getStyles() {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone() {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n\n}\n\nfunction key(pid, styles) {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\n\n\nexport class FreeStyle extends Cache {\n  constructor(id, changes) {\n    super(changes);\n    this.id = id;\n  }\n\n  registerStyle(styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix, styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule, styles) {\n    const rulesList = [];\n    const stylesList = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles() {\n    return join(this.sheet);\n  }\n\n  clone() {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n\n}\n/**\n * Exports a simple function to create a new instance.\n */\n\nexport function create(changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}","map":{"version":3,"mappings":"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","names":["uniqueId","CSS_NUMBER","Object","create","CSS_NUMBER_KEYS","property","prefix","escape","str","replace","hyphenate","propertyName","m","toLowerCase","stringHash","value","len","length","charCodeAt","toString","styleToString","key","sortTuples","sort","a","b","parseStyles","styles","hasNestedStyles","properties","nestedStyles","keys","name","trim","Array","isArray","push","style","stringifyProperties","nested","isUnique","$unique","map","x","join","interpolate","selector","parent","indexOf","stylize","rulesList","stylesList","pid","child","rules","composeStylize","cache","className","isStyle","id","item","Style","add","Selector","Rule","arr","res","i","noopChanges","undefined","change","remove","Cache","constructor","changes","count","_counters","_children","clone","_keys","sheet","getStyles","changeId","curIndex","prevItemChangeId","merge","splice","index","prevChangeId","unmerge","values","rule","process","env","NODE_ENV","$displayName","FreeStyle","registerStyle","registerKeyframes","keyframes","registerHashRule","registerRule","registerCss"],"sources":["/home/developer/Desktop/projects/my-portfolio/node_modules/free-style/src/index.ts"],"sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string;\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  $unique?: boolean;\n  $displayName?: string;\n  [selector: string]:\n    | null\n    | undefined\n    | PropertyValue\n    | PropertyValue[]\n    | Styles;\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string;\n\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER: Record<string, true> = Object.create(null);\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n  \"animation-iteration-count\",\n  \"border-image-outset\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"box-flex\",\n  \"box-flex-group\",\n  \"box-ordinal-group\",\n  \"column-count\",\n  \"columns\",\n  \"counter-increment\",\n  \"counter-reset\",\n  \"flex\",\n  \"flex-grow\",\n  \"flex-positive\",\n  \"flex-shrink\",\n  \"flex-negative\",\n  \"flex-order\",\n  \"font-weight\",\n  \"grid-area\",\n  \"grid-column\",\n  \"grid-column-end\",\n  \"grid-column-span\",\n  \"grid-column-start\",\n  \"grid-row\",\n  \"grid-row-end\",\n  \"grid-row-span\",\n  \"grid-row-start\",\n  \"line-clamp\",\n  \"line-height\",\n  \"opacity\",\n  \"order\",\n  \"orphans\",\n  \"tab-size\",\n  \"widows\",\n  \"z-index\",\n  \"zoom\",\n  // SVG properties.\n  \"fill-opacity\",\n  \"flood-opacity\",\n  \"stop-opacity\",\n  \"stroke-dasharray\",\n  \"stroke-dashoffset\",\n  \"stroke-miterlimit\",\n  \"stroke-opacity\",\n  \"stroke-width\"\n];\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nfunction escape(str: string) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName: string): string {\n  return propertyName\n    .replace(/[A-Z]/g, (m: string) => `-${m.toLowerCase()}`)\n    .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str: string): string {\n  let value = 5381;\n  let len = str.length;\n  while (len--) value = (value * 33) ^ str.charCodeAt(len);\n  return (value >>> 0).toString(36);\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key: string, value: PropertyValue) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples<T extends any[]>(value: T[]): T[] {\n  return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = [];\n  const nestedStyles: Array<[string, Styles]> = [];\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(\n  properties: Array<[string, PropertyValue | PropertyValue[]]>\n) {\n  return properties\n    .map(([name, value]) => {\n      if (!Array.isArray(value)) return styleToString(name, value);\n\n      return value.map(x => styleToString(name, x)).join(\";\");\n    })\n    .join(\";\");\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector: string, parent: string) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n\ntype StylizeStyle = { selector: string; style: string; isUnique: boolean };\n\ntype StylizeRule = {\n  selector: string;\n  style: string;\n  rules: StylizeRule[];\n  styles: StylizeStyle[];\n};\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = {\n      selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child);\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) {\n      child.styles.push({ selector: parent, style, isUnique });\n    }\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent);\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n\n    if (style) stylesList.push({ selector: key, style, isUnique });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique\n      ? `u\\0${(++uniqueId).toString(36)}`\n      : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join(arr: string[]): string {\n  let res = \"\";\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n  return res;\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add(style: Container<any>, index: number): void;\n  change(style: Container<any>, oldIndex: number, newIndex: number): void;\n  remove(style: Container<any>, index: number): void;\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n\n/**\n * Cache-able interface.\n */\nexport interface Container<T> {\n  id: string;\n  clone(): T;\n  getStyles(): string;\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache<T extends Container<any>> {\n  sheet: string[] = [];\n  changeId = 0;\n\n  private _keys: string[] = [];\n  private _children: Record<string, T | undefined> = Object.create(null);\n  private _counters: Record<string, number | undefined> = Object.create(null);\n\n  constructor(public changes: Changes = noopChanges) {}\n\n  add(style: T): void {\n    const count = this._counters[style.id] || 0;\n    const item: T = this._children[style.id] || style.clone();\n\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n      this._keys.push(item.id);\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n      const prevItemChangeId = item.changeId;\n\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style: T): void {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n\n      const item = this._children[style.id]!;\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values(): T[] {\n    return this._keys.map(key => this._children[key]!);\n  }\n\n  merge(cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item);\n    return this;\n  }\n\n  unmerge(cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item);\n    return this;\n  }\n\n  clone(): Cache<T> {\n    return new Cache<T>().merge(this);\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor(public selector: string, public id: string) {}\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone(): Selector {\n    return this;\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor(public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone(): Style {\n    return new Style(this.style, this.id).merge(this);\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor(public rule: string, public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone(): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n}\n\nfunction key(pid: string, styles: Styles): string {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style>\n  implements Container<FreeStyle> {\n  constructor(public id: string, changes?: Changes) {\n    super(changes);\n  }\n\n  registerStyle(styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes: Styles) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles: Styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles(): string {\n    return join(this.sheet);\n  }\n\n  clone(): FreeStyle {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes?: Changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n"]},"metadata":{},"sourceType":"module"}